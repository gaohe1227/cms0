spring.profiles.active=dev
#设置数据源druid
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#mysql设置
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/cms?characterEncoding=utf-8&useOldAliasMetadataBehavior=true
#jpa设置
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
spring.jpa.database=mysql
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true 

###THYMELEAF (ThymeleafAutoConfiguration)  
########################################################  
#spring.thymeleaf.prefix=classpath:/templates/  
#spring.thymeleaf.suffix=.html  
#spring.thymeleaf.mode=HTML5  
#spring.thymeleaf.encoding=UTF-8  
# ;charset=<encoding> is added  
#spring.thymeleaf.content-type=text/html  
# set to false for hot refresh  
 
spring.thymeleaf.cache=false  

#mvc设置
#spring.mvc.view.prefix=/WEB-INF/jsp/
#spring.mvc.view.suffix=.html
#contextPath
#server.context-path=/cms
#port
#server.port=8080
#éæèµæº
#èµæºæ å°è·¯å¾ä¸º/static/**
#spring.mvc.static-path-pattern=/static/** 
#èµæºæ å°å°åä¸ºclasspath:/static/
#spring.resources.static-locations=classpath:/resources/static/ 
#日志
logging.level.root=INFO 
logging.level.org.springframework.web=ERROR  
logging.level.org.hibernate=ERROR  
#logging.path=/home/_xyy_/output/SpringBootDemo/logs  
logging.file=d:/log/cms.log 
#æå°mybatisçsql
logging.level.com.cms.base.mapper=DEBUG

#logging.config=classpath:log4j.properties
#mybatis
#mybatis.type-aliases-package=com.mybatis.entity
#redis配置
spring.redis.database=0
spring.redis.host=172.16.64.128
spring.redis.port=6379
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1
 


# 设置邮箱主机
spring.mail.host=smtp.qq.com
# 设置用户名
spring.mail.username=904724283@qq.com
# 设置密码
spring.mail.password=Gaohe19901227
# 设置是否需要认证，如果为true,那么用户名和密码就必须的，
#如果设置false，可以不设置用户名和密码，当然也得看你的对接的平台是否支持无密码进行访问的。
spring.mail.properties.mail.smtp.auth=true
# STARTTLS[1]  是对纯文本通信协议的扩展。它提供一种方式将纯文本连接升级为加密连接（TLS或SSL），而不是另外使用一个端口作加密通信。
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true


 